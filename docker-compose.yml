version: "3.7"

services:
  indexer-node:
    build:
      context: .
      dockerfile: celatone-docker/Dockerfile
    image: localosmosis-indexer:latest
    ports:
      - "26656:26656"
      - "1317:1317"
      - "26657:26657"
    networks:
      localosmosis:
        ipv4_address: 172.18.0.11
    command: sh -c "chmod +x ./run.sh && ./run.sh indexer-node"

  postgres:
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    networks:
      localosmosis:
        ipv4_address: 172.18.0.88
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: localosmosis

  faucet:
    image: alleslabs/osmosis-faucet:latest
    ports:
      - "5005:5005"
    networks:
      localosmosis:
        ipv4_address: 172.18.0.17
    environment:
      CHAIN_ID: localosmosis
      NODE: tcp://172.18.0.11:26657
      MNEMONIC: 'smile stem oven genius cave resource better lunar nasty moon company ridge brass rather supply used horn three panic put venue analyst leader comic'
      GAS_PRICES: 1uosmo
      AMOUNT: 10000000
      DENOM: uosmo
    command: sh -c "echo $${MNEMONIC} | ./faucet keys add provider --recover && ./faucet run --chain-id $${CHAIN_ID} --node $${NODE} --gas-prices $${GAS_PRICES} --port 5005 --amount $${AMOUNT} --denom $${DENOM} --rate-limit=false"

  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
      - "5433:5433"
    depends_on:
      - "postgres"
    restart: always
    networks:
      localosmosis:
        ipv4_address: 172.18.0.89
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@172.18.0.88:5432/localosmosis
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@172.18.0.88:5432/localosmosis
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_SERVER_HOST: 0.0.0.0
      HASURA_GRAPHQL_SERVER_PORT: 5433
      HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: "true"

  zookeeper:
    image: zookeeper
    networks:
      localosmosis:
        ipv4_address: 172.18.0.30

  kafka:
    image: wurstmeister/kafka
    networks:
      localosmosis:
        ipv4_address: 172.18.0.31
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.31
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: LocalOsmosis:1:1
      KAFKA_ZOOKEEPER_CONNECT: 172.18.0.30:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  flusher-init:
    build:
      context: flusher
    image: localosmosis-flusher:latest
    networks:
      localosmosis:
    command: sh -c "sleep 30 && python main.py init localosmosis LocalOsmosis replay --db postgres:postgrespassword@172.18.0.88:5432/localosmosis"

  flusher-daemon:
    image: localosmosis-flusher:latest
    networks:
      localosmosis:
    restart: always

  celatone-api:
    image: alleslabs/celatone-api:latest
    ports:
      - "8081:8080"
    networks:
      localosmosis:
        ipv4_address: 172.18.0.12
    environment:
      LCD_DICT: '{"osmosis":{"localosmosis":"http://172.18.0.11:1317"}}'
      HIVE_DICT: '{"localosmosis":""}'
      GRAPHQL_DICT: '{"osmosis":{"localosmosis":"http://172.18.0.89:5433/v1/graphql"}}'
      SCANWORKS_URL: 'https://raw.githubusercontent.com/teamscanworks/cw-contracts-registry/main/'
      PRICE_CACHER_URL: 'https://celatone-price-cacher-h2bc4rnx5a-as.a.run.app'
      GRAPHQL_TEST_DICT: '{"osmosis":{"localosmosis":"http://172.18.0.89:5433/v1/graphql"}}'

  proxy-ssl-server:
    build:
      context: ./celatone-docker/proxy-ssl
    image: proxy-ssl-server:latest
    networks:
      localosmosis:
        ipv4_address: 172.18.0.98
    depends_on:
      - indexer-node
    ports:
      - "80:80"
      - "443:443"
      - "9091:9091"

networks:
  localosmosis:
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/16"
